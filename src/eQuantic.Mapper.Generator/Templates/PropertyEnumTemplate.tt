<#@ template language="C#" visibility="internal" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="eQuantic.Mapper.Generator.Extensions" #>
<#
    if (destProperty.Type.IsEnum() && srcProperty.Type.IsEnum())
    {
        var srcPropertyType = srcProperty.Type.GetUnderlyingType() ?? srcProperty.Type;
        var destPropertyType = destProperty.Type.GetUnderlyingType() ?? destProperty.Type;
        
        if (destPropertyType.TryFullName() == srcPropertyType.TryFullName())
        {
            if (srcProperty.Type.IsNullable())
            {
                if (verifyNullability)
                {
#>
            if (source.<#=srcProperty.Name#>.HasValue)
                destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>.Value;
<#
                }
                else
                {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#> ?? default;
<#
                }
            }
            else
            {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>;
<#
            }
        }
        else
        {
            if (srcProperty.Type.IsNullable())
            {
                if (verifyNullability)
                {
#>
            if (source.<#=srcProperty.Name#>.HasValue)
                destination.<#=destProperty.Name#> = (<#=destProperty.Type.Name#>)(int)source.<#=srcProperty.Name#>.Value;
<#
                }
                else
                {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>.HasValue ? (<#=destProperty.Type.Name#>)(int)source.<#=srcProperty.Name#>.Value : default;
<#
                }
            }
            else
            {
#>
            destination.<#= destProperty.Name #> = (<#= destProperty.Type.Name #>)(int)source.<#= srcProperty.Name #>;
<#
            }
        }
    }
    else if ((destProperty.Type.IsEnum() && srcProperty.Type.IsNumeric()) ||
             (srcProperty.Type.IsEnum() && destProperty.Type.IsNumeric()))
    {
#>
            destination.<#=destProperty.Name#> = (<#=destProperty.Type.Name#>)source.<#=srcProperty.Name#>;
<#
    }
    else if (destProperty.Type.IsEnum() && srcProperty.Type.IsString())
    {
#>
            if (Enum.TryParse(source.<#=srcProperty.Name#>, out <#=destProperty.Type.Name#> dest<#=destProperty.Name#>))
            {
                destination.<#=destProperty.Name#> = dest<#=destProperty.Name#>;
            }
<#
    }
    else if (srcProperty.Type.IsEnum() && destProperty.Type.IsString())
    {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>.ToString();
<#
    }
#>