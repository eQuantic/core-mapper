<#@ template language="C#" visibility="internal" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="eQuantic.Mapper.Generator.Extensions" #>
<#
    if (srcProperty.Type.IsNullable())
    {
        var srcType = srcProperty.Type.GetFirstTypeArgument() ?? srcProperty.Type;
        if (srcType.IsString())
        {
            if (verifyNullability)
            {
#>

            if (!string.IsNullOrEmpty( source.<#=srcProperty.Name#> ))
                destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>;
<#
            }
            else
            {
                if (destProperty.Type.IsNullable())
                {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>;
<#
                }
                else
                {
#>
            destination.<#=destProperty.Name#> = string.IsNullOrEmpty( source.<#=srcProperty.Name#> ) ? string.Empty : source.<#=srcProperty.Name#>;
<#
                }
            }
        }
        else if (srcType.IsNumeric())
        {
            if (verifyNullability)
            {
#>

            if (source.<#=srcProperty.Name#>.HasValue)
                destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>.Value;
<#
            }
            else
            {
                if (destProperty.Type.IsNullable())
                {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>;
<#
                }
                else
                {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#> ?? 0;
<#
                }
            }
        }
        else
        {
            if (verifyNullability)
            {
#>

            if (source.<#=srcProperty.Name#> != null)
                destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>;
<#
            }
            else
            {
                if (destProperty.Type.IsNullable())
                {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>;
<#
                }
                else
                {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#> != null ? source.<#=srcProperty.Name#> : default;
<#
                }
            }
        }
    }
    else
    {
#>
            destination.<#=destProperty.Name#> = source.<#=srcProperty.Name#>;
<#
    }
#>